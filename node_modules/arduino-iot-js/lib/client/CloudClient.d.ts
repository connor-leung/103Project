import { IConnectionBuilder } from '../builder/IConnectionBuilder';
import { IConnection } from '../connection/IConnection';
import { ICloudClient, CloudOptions, OnMessageCallback, CloudMessageValue } from './ICloudClient';
export declare class CloudClient implements ICloudClient {
    private builders;
    private connection;
    private subscriptions;
    private callbacks;
    private propertiesCbs;
    private options;
    static From(connection: IConnection): CloudClient;
    constructor(builders?: IConnectionBuilder[]);
    connect(options: CloudOptions): Promise<IConnection>;
    private init;
    disconnect(): Promise<void>;
    reconnect(): Promise<void>;
    updateToken(newToken: string): Promise<void>;
    getToken(): string;
    sendMessage(topic: string, message: string | ArrayBuffer): Promise<void>;
    sendProperty<T extends CloudMessageValue>(thingId: string, name: string, value: T, timestamp?: number): Promise<void>;
    onPropertyValue<T extends CloudMessageValue>(thingId: string, name: string, cb: OnMessageCallback<T>): Promise<void>;
    private subscribe;
    private unsubscribe;
    private messagesFrom;
}
