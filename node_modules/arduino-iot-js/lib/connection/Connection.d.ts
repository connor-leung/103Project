import mqtt from 'mqtt';
import { Observable } from 'rxjs';
import { IConnection, CloudMessage } from './IConnection';
export declare class Connection implements IConnection {
    token: string;
    messages: Observable<CloudMessage>;
    private _client;
    private get client();
    private set client(value);
    static From(host: string, port: string | number, token: string, mqttConnect: (string: any, IClientOptions: any) => mqtt.MqttClient): Promise<IConnection>;
    on(event: any, cb: any): IConnection;
    end(force?: boolean, opts?: Record<string, any>, cb?: mqtt.CloseCallback): IConnection;
    reconnect(opts?: mqtt.IClientReconnectOptions): IConnection;
    unsubscribe(topic: string | string[], opts?: any, callback?: any): IConnection;
    publish(topic: any, message: any, opts?: any, callback?: any): IConnection;
    subscribe(topic: any, callback?: any): IConnection;
    private messagesFrom;
}
