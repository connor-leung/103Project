/// <reference types="node" />
import { CloudMessageValue } from '../client/ICloudClient';
declare class ArduinoCloudError extends Error {
    code: number;
    constructor(code: number, message: string);
}
declare function isObject(value: CloudMessageValue): value is object;
declare function isNumber(value: CloudMessageValue): value is number;
declare function isString(value: CloudMessageValue): value is string;
declare function isBoolean(value: CloudMessageValue): value is boolean;
declare function isArray<T>(value: CloudMessageValue): value is T[];
declare function isNotAnEmptyObject(value: any): boolean;
declare function toArrayBuffer(buf: {
    length: number;
}): ArrayBuffer;
declare function toBuffer(ab: ArrayBuffer): Buffer;
declare function arrayBufferToBase64(buf: ArrayBuffer): string;
declare const _default: {
    ArduinoCloudError: typeof ArduinoCloudError;
    isObject: typeof isObject;
    isNumber: typeof isNumber;
    isString: typeof isString;
    isBoolean: typeof isBoolean;
    isArray: typeof isArray;
    toArrayBuffer: typeof toArrayBuffer;
    toBuffer: typeof toBuffer;
    arrayBufferToBase64: typeof arrayBufferToBase64;
    isNotAnEmptyObject: typeof isNotAnEmptyObject;
};
export default _default;
