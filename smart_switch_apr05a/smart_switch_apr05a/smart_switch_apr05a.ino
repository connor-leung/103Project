#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/e9843c41-68d0-480f-afd7-f45402f5e020 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudLight button;
  int endAngle;
  int startAngle;
  bool blink;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <Servo.h>

Servo lightServo;

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 
  lightServo.attach(2);

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  
  
}



/*
  Since Button is READ_WRITE variable, onButtonChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onButtonChange()  {
  // Add your code here to act upon Button change
  if (button) {
    lightServo.write(endAngle);
  } else {
    lightServo.write(startAngle);
  }
}

/*
  Since Angle is READ_WRITE variable, onAngleChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onAngleChange()  {
  // Add your code here to act upon Angle change
}

/*
  Since Blink is READ_WRITE variable, onBlinkChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onBlinkChange()  {
  // Add your code here to act upon Blink change
  if (blink) {
    digitalWrite(LED_BUILTIN, HIGH);
  } else {
    digitalWrite(LED_BUILTIN, LOW);
  }
  
  
}

/*
  Since EndAngle is READ_WRITE variable, onEndAngleChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onEndAngleChange()  {
  // Add your code here to act upon EndAngle change
}

/*
  Since StartAngle is READ_WRITE variable, onStartAngleChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onStartAngleChange()  {
  // Add your code here to act upon StartAngle change
}